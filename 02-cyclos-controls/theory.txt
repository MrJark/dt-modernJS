
Pasar información por valor y referencia

    Cuando trabajamos con primitivos, cualquier asignación a variables o asignaciones a los argumentos de las funciones, lo estás enviando por valor, es decir, no estás afectando el disco local en memoria, solo estás pasando el valor

    Cuándo se pasa por referencia y cuándo no?

        Todos los objetos son pasados por referencia mientras que todos los primitivos(boolean, null, undefined, strings, numbers, symbols) se pasan por valor
        Explicación: https://keepcoding.io/blog/pasar-variable-por-valor-referencia-javascript/#
    
    Para romper estas referencias, tienes que usar el operador 'spread' que son los 3 puntos antes del valor ' ... ' que si se pone entre los paréntesis, en un argumento, se comporta como un parámetro 'rest', lo que quiere decir es que junta todos los argumentos en una sola variable y lo transforma en un arreglo.
    Solo y tan solo se comporta como un 'rest' dentro de paréntesis, en argumentos, sino siempre es un 'spread'
    Aquí la info: https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax

-----------------------

Estructuras de control

    Son aquellas estructuras que te permiten controlar como fluye el flujo de lectura teniendola capacidad de repetir, volver o seguir
    Estas estructuras son los if - else

------------------

Lógica booleana

-------------------

Operadores Ternarios

------------------

Ciclos While y Do While

    Ambos sirven para lo mismo pero La diferencia entre el ciclo while y el do while es que en el primero la secuencia se ejucuta hasta que la condición en el while sea falsa, y en el do while la secuencia se ejecuta y luego se evalual la condición, si esta es verdadera se vuelve a ejecutar la secuencia hasta que sea falsa.

-------------------

Ciclos for

    